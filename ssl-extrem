#!/bin/bash

######################################################################
# ssl-killer
# search and copy Exploit from exploit-db 2 metasploit-framework
# Needs searchsploit amd metasploit-framework installed
# script install this tools for you
# First run from github directory ./ssl-killer ... after install
# use command ssl-killer system wide
# command: > ssl-killer $searchsting1 $searchstring2 $searchstring3
######################################################################

######################################################################
# create 29.03.2018
# last modify: 29.03.2018
# bug or anything: d43M0n23@3xpl0it.com
######################################################################

######################################################################

# Bash sTyl3!
clear='\033[0m'			#alle Attribute zurücksetzen
red='\e[31m'			#Schriftfarbe rot
bold='\033[1m'			#Fettschrift
underline='\033[4m'		#Unterstreichen
blinken='\033[5m'		#Blinken
invers='\033[7m'		#inverse Darstellung
black='\033[30m'		#Schriftfarbe schwarz
red='\033[31m'			#Schriftfarbe rot
green='\033[32m'		#Schriftfarbe grün
yell='\033[33m'			#Schriftfarbe gelb
blue='\033[34m'			#Schriftfarbe blau
mag='\033[35m'			#Schriftfarbe magenta
turk='\033[36m'			#Schriftfarbe türkis
white='\033[37m'		#Schriftfarbe weiß
orange='\033[93m'		#Schriftfarbe orange
######################################################################


##Variablen
DATE=$(date +%F)
version=v1.0
vdate=29.03.2018

# Local Destination
INSTALL_DIR=/usr/share/ssl-killer


# Tools install
if ! hash bettercap 2>/dev/null; then sudo apt-get update && apt-get upgrade -y; sudo apt-get install --yes bettercap ; fi
#if ! hash msfconsole 2>/dev/null; then sudo apt-get update && apt-get upgrade -y; sudo apt-get install --yes metasploit-framework ; fi

#INSTALL
if [ ! -d $INSTALL_DIR ]; then
echo -e "\n${green} + -- --=[This is your first run of the ssl-killer script${clear}"
echo -e "${green} + -- --=[This script will install ssl-killer under $INSTALL_DIR.${clear}"
echo -e "${green} + -- --=[After install you can use the command 'ssl-killer' Server/System wide and remove the downloaded git folder${clear}"
sleep 2
mkdir -p $INSTALL_DIR 2> /dev/null
cp -Rf $PWD/* $INSTALL_DIR 2> /dev/null
#rm -f /usr/bin/copysploit
rm -f /usr/bin/ssl-killer
ln -s $INSTALL_DIR/ssl-killer /usr/bin/ssl-killer
echo -e "${green} + -- --=[Installation Finish.${clear}"
sleep 2
fi

### FUNCTIONS ###
#Latest release
LATEST_RELEASE=$(curl -L -s -H 'Accept: application/json' https://github.com/d43M0n23/ssl-killer/releases/latest)
LATEST_VERSION=$(echo $LATEST_RELEASE | sed -e 's/.*"tag_name":"\([^"]*\)".*/\1/')

#UPDATE NEW VERSION
if [ "$LATEST_VERSION" != "$version" ]; then
echo -e "\n${red}Your Version of ssl-killer is outdated!${clear}"
echo -e "\n${green}Please use the update function: ssl-killer --update!${clear}"
sleep 5
fi

#UPDATE
if [ "$1"  = "--update" ]; then
echo -e "\n${turk}You have select the update Feature${clear}"
sleep 2
cd /tmp/
git clone https://github.com/d43M0n23/ssl-killer.git
cp -Rf ssl-killer/* $INSTALL_DIR 2> /dev/null
rm -f /usr/bin/ssl-killer
ln -s $INSTALL_DIR/ssl-killer /usr/bin/ssl-killer
echo -e "\n${green}Update finish.Please restart ssl-killer.${clear}"
rm -r ssl-killer
exit
fi

#UNINSTALL
if [ "$1"  = "--deinstall" ]; then
echo -e "\n${turk}You have select the deinstall Feature${clear}"
sleep 2
rm -f /usr/bin/ssl-killer
cd /usr/share/
rm -r ssl-killer/
echo -e "\n${turk}deinstall Finish${clear}"
cd
exit
fi

#START MAINSTAGE
clear
echo -e '\n'
echo -e "             __    __    _ ____       "
echo -e "    ___ ___ / /___/ /__ (_) / /__ ____"
echo -e "   (_-<(_-</ /___/  '_// / / / -_) __/"
echo -e "  /___/___/_/   /_/\_\/_/_/_/\__/_/   "

echo -e "\n${orange} + -- --=[https://3xpl0it.com${clear} ${red}Version ${version}${clear}"
sleep 1


echo -e "\n"
cat <<EOF
Enter Your Target.
EOF

# Email
email=alex@xcoorp.com


# Log & bka-dir check
#if [ ! -f $LOG ]; then touch $LOG; fi
#if [ ! -d $DESTINATION ]; then mkdir $DESTINATION; fi

# DELETE OLD LOGS?
# 1=yes/0=no
kill_logs=0
if [ $kill_logs = 1 ]; then rm *.log; fi

#WORKING DIR
TOPDIR=`pwd`


########  START FUNCTIONS ########
# -------------------------------------------
# send email with report from single scann
# -------------------------------------------
sh_mail () {
mail -s "sc4nn3r: ${scanner}" $email < $scanlog -aFrom:sc4nn3r@3xpl0it.com
}

#################
clear
#################

echo '+-------------------------------------------------+'
echo "|   Version ${version} (c)opyright 2018 by              |"
echo '|   DaemoN d43M0n23@3xpl0it.com                   |'
echo '+-------------------------------------------------+'
echo '|   This Script is subject to the GPL License!    |'
echo '|   You can copy and change it!                   |'
echo '+-------------------------------------------------+'
echo "|                                Date: ${vdate} |"
echo '+-------------------------------------------------+'
sleep 2
while [ "$attacker" != "q" ]

#clear

echo '+-------------------------------------------------+'
echo '| Own-Scripts, Aux & Scanner-Frames               |'
echo '+-------------------------------------------------+'
echo '| 1.Bettercap                                     |'
echo '| 2.SSL-Stripe                                    |'
echo '| a.All.                                          |'
echo '| x.Quit.                                         |'
echo '+-------------------------------------------------+'
read -p "Attacker Nr (1-x)? " attacker
if [ $attacker = a ]; then
read -p "Wordpress or Joomla (w/j)? " cms_system
fi

do

case $attacker in

        1)
		echo "Bettercap selected"
		read -p "domain (e.g. google.com)? " wp_domain
		if [ $wp_domain ]; then
		wpscan --update
		wpscan --url $wp_domain --enumerate 2>&1 | tee -a wpscan_${wp_domain}.log
		echo -e "\n${yell}Logfile is saved as wpscan_${wp_domain}.log${clear}\n"
		scanner=Wpscan_${wp_domain}
		scanlog=wpscan_${wp_domain}.log
		#mail -s "sc4nn3r: ${scanner}" $email < $scanlog -aFrom:cms-sc4nn3r@3xpl0it.com
		sh_mail
		else
        	echo -e "\nPlease enter a domain!\n"
		fi
            	;;
        2)
		echo "SSL-Stripe"
		read -p "domain (e.g. google.com)? " cms_domain
		if [ $cms_domain ]; then
		python /root/c0r3/09-cms/CMSmap/cmsmap.py -t $cms_domain -o cmsscan_${cms_domain}.log
		echo -e "\n${yell}Logfile is saved as cmsscan_${cms_domain}.log${clear}\n"
                scanner=CMSscan_${cms_domain}
                scanlog=CMSscan_${cms_domain}.log
                sh_mail
                else
                echo -e "\nPlease enter a target-ip!\n"
                fi
    		;;


	x)
		break
		;;
        *)

		echo $"Usage: $0 {1-7|a|x}"
		exit 1
	esac
done
